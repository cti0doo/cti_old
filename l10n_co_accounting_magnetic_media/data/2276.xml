<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
        <!-- 2276 -->
        <record id="l10n_co_accounting_media_magnetic_2276" model="magnetic.media">
            <field name="code">2276</field>
            <field name="name">2276 - INGRESOS Y RETENCIONES POR RENTAS DE TRABAJO Y DE PENSIONES v2</field>
            <field name="smaller_amount">0</field>
            <field name="query">SELECT
                A as "Tipo documento",
                B as "Número de identificación de beneficiario",
                C as "Primer apellido del beneficiario",
                D as "Segundo apellido del beneficiario",
                E as "Primer nombre del beneficiario",
                F as "Segundo nombre del beneficiario",
                G as "Dirección del beneficiario",
                H as "Departamento del beneficiario",
                I as "Municipio del beneficiario",
                J as "País del beneficiario",
                SUM(K) as "Pagos por salarios",
                SUM(L) as "Pagos por emolumentos eclesiasticos",
                SUM(M) as "Pagos por honorarios",
                SUM(N) as "Pagos por servicios",
                SUM(O) as "Pagos por comisiones",
                SUM(P) as "Pagos por prestacionesociales",
                SUM(Q) as "Pagos por viáticos",
                SUM(R) as "Pagos por gastos de representación",
                SUM(S) as "Pagos por compensaciones  trabajo asociado cooperativo",
                SUM(T) as "Otros pagos",
                SUM(U) as "Pagos realizados con bonos electrónicos o de papel de servicio, cheques, tarjetas, vales, etc.",
                SUM(V) as "Cesantías e intereses pagadas en el período",
                SUM(W) as "Pensiones de Jubilación, vejez o invalidez",
                SUM(X) as "Aportes Obligatorios por Salud",
                SUM(Y) as "Aportes Obligatorios a fondos de pensiones y solidaridad pensional",
                SUM(Z) as "Aportes Voluntarios a fondos de Pensiones y Cuentas AFC",
                SUM(AA) as "Valor de las retenciones en la fuente por pagos de rentas de trabajo o pensiones"
                FROM
                (
                SELECT
                rp.vat_type as A,
                rp.vat as B,
                rp.firstname as C,
                rp.other_name as D,
                rp.lastname as E,
                rp.other_lastname as F,
                rp.street as G,
                rcs.code as H,
                rcsc.code as I,
                rc.code as J,
                (
                CASE WHEN mmlc.sequence = 'K' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'K' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'K' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as K,
                (
                CASE WHEN mmlc.sequence = 'L' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'L' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'L' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as L,(
                CASE WHEN mmlc.sequence = 'M' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'M' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'M' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as M,
                (CASE WHEN mmlc.sequence = 'N' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'N' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'N' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as N,
                (CASE WHEN mmlc.sequence = 'O' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'O' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'O' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as O,
				(CASE WHEN mmlc.sequence = 'P' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'P' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'P' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as P,
                (CASE WHEN mmlc.sequence = 'Q' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'Q' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'Q' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as Q,
                (CASE WHEN mmlc.sequence = 'R' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'R' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'R' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as R,
                (CASE WHEN mmlc.sequence = 'S' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'S' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'S' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as S,
                (CASE WHEN mmlc.sequence = 'T' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'T' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'T' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as T,
                (CASE WHEN mmlc.sequence = 'U' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'U' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'U' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as U,
                (CASE WHEN mmlc.sequence = 'V' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'V' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'V' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as V,
                (CASE WHEN mmlc.sequence = 'W' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'W' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'W' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as W,
                (CASE WHEN mmlc.sequence = 'X' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'X' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'X' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as X,
                (CASE WHEN mmlc.sequence = 'Y' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'Y' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'Y' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as Y,
                (CASE WHEN mmlc.sequence = 'Z' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'Z' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'Z' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as Z,
                (CASE WHEN mmlc.sequence = 'AA' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'AA' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'AA' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as AA
                FROM
                magnetic_media mm
                INNER JOIN magnetic_media_lines mml ON mml.magnetic_id = mm.id
                INNER JOIN magnetic_media_lines_concepts mmlc ON mmlc.line_id = mml.id
                inner join (
                select aammlcr.account_account_id as account_id, aammlcr.magnetic_media_lines_concepts_id as concept_id
                from account_account_magnetic_media_lines_concepts_rel aammlcr
                union all
                select aaat.account_account_id as account_id, mmlcaat.concept_ids as concept_id
                from magnetic_media_lines_concepts_account_account_tag mmlcaat
                inner join account_account_tag aat on aat.id = mmlcaat.tag_ids
                inner join account_account_account_tag aaat on aaat.account_account_tag_id = aat.id
                ) as aa on aa.concept_id = mmlc.id
                INNER JOIN account_move_line aml ON aml.account_id = aa.account_id
                LEFT JOIN res_partner rp ON rp.id = aml.partner_id
                LEFT JOIN res_country_state rcs ON rcs.id = rp.state_id
                LEFT JOIN res_country_state_city rcsc ON rcsc.id = rp.city_id
                LEFT JOIN res_country rc ON rc.id = rp.country_id
                WHERE
                mm.id = {id}
                AND aml.date BETWEEN '{date_from}'
                AND '{date_to}'
                GROUP BY
                mml.code,
                rp.vat_type,
                rp.vat,
                rp.firstname,
                rp.other_name,
                rp.lastname,
                rp.other_lastname,
                rp.name,
                rp.street,
                rcs.code,
                rcsc.code,
                rc.code,
                mmlc.sequence,
                mmlc.type,
                mm.smaller_amount
                HAVING
                abs(SUM(aml.debit - aml.credit))::float > mm.smaller_amount::float
                UNION
                SELECT
                '43' as A,
                '222222222' as B,
                '7' as C,
                'CUANTIAS MENORES' as D,
                'CUANTIAS MENORES' as E,
                'CUANTIAS MENORES' as F,
                'CUANTIAS MENORES' as G,
                NULL as H,
                NULL as I,
                NULL as J,
                (
                CASE WHEN mmlc.sequence = 'K' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'K' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'K' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as K,
                (
                CASE WHEN mmlc.sequence = 'L' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'L' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'L' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as L,(
                CASE WHEN mmlc.sequence = 'M' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'M' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'M' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as M,
                (CASE WHEN mmlc.sequence = 'N' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'N' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'N' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as N,
                (CASE WHEN mmlc.sequence = 'O' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'O' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'O' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as O,
				(CASE WHEN mmlc.sequence = 'P' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'P' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'P' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as P,
                (CASE WHEN mmlc.sequence = 'Q' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'Q' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'Q' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as Q,
                (CASE WHEN mmlc.sequence = 'R' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'R' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'R' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as R,
                (CASE WHEN mmlc.sequence = 'S' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'S' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'S' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as S,
                (CASE WHEN mmlc.sequence = 'T' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'T' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'T' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as T,
                (CASE WHEN mmlc.sequence = 'U' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'U' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'U' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as U,
                (CASE WHEN mmlc.sequence = 'V' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'V' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'V' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as V,
                (CASE WHEN mmlc.sequence = 'W' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'W' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'W' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as W,
                (CASE WHEN mmlc.sequence = 'X' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'X' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'X' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as X,
                (CASE WHEN mmlc.sequence = 'Y' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'Y' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'Y' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as Y,
                (CASE WHEN mmlc.sequence = 'Z' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'Z' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'Z' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as Z,
                (CASE WHEN mmlc.sequence = 'AA' AND mmlc.type = 'd' THEN SUM(aml.debit)
                WHEN mmlc.sequence = 'AA' AND mmlc.type = 'c' THEN SUM(aml.credit)
                WHEN mmlc.sequence = 'AA' AND mmlc.type = 'sf' THEN SUM(aml.debit-aml.credit) END
                ) as AA
                FROM
                magnetic_media mm
                INNER JOIN magnetic_media_lines mml ON mml.magnetic_id = mm.id
                INNER JOIN magnetic_media_lines_concepts mmlc ON mmlc.line_id = mml.id
                inner join (
                select aammlcr.account_account_id as account_id, aammlcr.magnetic_media_lines_concepts_id as concept_id
                from account_account_magnetic_media_lines_concepts_rel aammlcr
                union all
                select aaat.account_account_id as account_id, mmlcaat.concept_ids as concept_id
                from magnetic_media_lines_concepts_account_account_tag mmlcaat
                inner join account_account_tag aat on aat.id = mmlcaat.tag_ids
                inner join account_account_account_tag aaat on aaat.account_account_tag_id = aat.id
                ) as aa on aa.concept_id = mmlc.id
                LEFT JOIN account_move_line aml ON aml.account_id = aa.account_id
                LEFT JOIN res_partner rp ON rp.id = aml.partner_id
                LEFT JOIN res_country_state rcs ON rcs.id = rp.state_id
                LEFT JOIN res_country_state_city rcsc ON rcsc.id = rp.city_id
                LEFT JOIN res_country rc ON rc.id = rp.country_id
                WHERE
                mm.id = {id}
                AND aml.date BETWEEN '{date_from}'
                AND '{date_to}'
                GROUP BY
                mml.code,
                rp.vat_type,
                rp.vat,
                rp.vat_vd,
                rp.name,
                rp.street,
                rcs.code,
                rcsc.code,
                rc.code,
                mmlc.sequence,
                mmlc.type,
                mm.smaller_amount
                HAVING
                abs(SUM(aml.debit - aml.credit))::float &lt; mm.smaller_amount::float
                ) as datos
                GROUP BY
                A,
                B,
                C,
                D,
                E,
                F,
                G,
                H,
                I,
                J,
                K,
                L
                ORDER BY C</field>
        </record>
    </data>
</odoo>
